-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2023-12-20 10:40:03 EET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE autori (
    id_autor       NUMBER NOT NULL,
    carti_id_carte NUMBER NOT NULL,
    nume_autor     CHAR(30) NOT NULL,
    prenume_autor  CHAR(30) NOT NULL,
    biografie      VARCHAR2(1000)
)
LOGGING;

ALTER TABLE autori ADD CONSTRAINT autori_pk PRIMARY KEY ( id_autor,
                                                          carti_id_carte );

CREATE TABLE carduri_de_biblioteca (
    id_card          NUMBER NOT NULL,
    membri_id_membru NUMBER NOT NULL,
    --numar_de_membru  NUMBER NOT NULL,
    data_expirarii   DATE NOT NULL
)
LOGGING;

CREATE UNIQUE INDEX carduri_de_biblioteca__idx ON
    carduri_de_biblioteca (
        membri_id_membru
    ASC )
        LOGGING;

ALTER TABLE carduri_de_biblioteca ADD CONSTRAINT carduri_de_biblioteca_pk PRIMARY KEY ( id_card );



CREATE TABLE carti (
    id_carte               NUMBER NOT NULL,
    titlu                  VARCHAR2(60) NOT NULL,
    autor                  VARCHAR2(40) NOT NULL,
    editura                VARCHAR2(30) NOT NULL,
    an_publicare           DATE NOT NULL,
    nr_exemp_impr          NUMBER NOT NULL,
    limba                  VARCHAR2(50),
    categorii_id_categorie NUMBER NOT NULL
)
LOGGING;

ALTER TABLE carti
    ADD CHECK ( length(titlu) > 1
                AND REGEXP_LIKE ( titlu,
                                  '^[a-zA-Z ]*$' ) );

ALTER TABLE carti
    ADD CHECK ( length(autor) > 1
                AND REGEXP_LIKE ( autor,
                                  '^[a-zA-Z ]*$' ) );

ALTER TABLE carti ADD CONSTRAINT carti_pk PRIMARY KEY ( id_carte );

--ALTER TABLE carti ADD CONSTRAINT carti_id_carte_un UNIQUE ( id_carte );

ALTER TABLE carti ADD CONSTRAINT carti_titlu_un UNIQUE ( titlu );

CREATE TABLE categorii (
    id_categorie   NUMBER NOT NULL,
    nume_categorie VARCHAR2(30) NOT NULL
)
LOGGING;

ALTER TABLE categorii ADD CONSTRAINT categorii_pk PRIMARY KEY ( id_categorie );

CREATE TABLE imprumuturi (
    id_imprumut       NUMBER NOT NULL,
    id_carte          NUMBER NOT NULL,
    membri_id_membru  NUMBER NOT NULL,
    data_imprumutului DATE NOT NULL,
    data_scadentei    DATE NOT NULL,
    data_returnarii   DATE
)
LOGGING;

ALTER TABLE imprumuturi ADD CONSTRAINT imprumuturi_pk PRIMARY KEY ( id_imprumut );

ALTER TABLE imprumuturi ADD CONSTRAINT imprumuturi_id_carte_un UNIQUE ( id_carte );

CREATE TABLE membri (
    id_membru          NUMBER NOT NULL,
    nume               CHAR(30) NOT NULL,
    prenume            CHAR(30) NOT NULL,
    nr_telefon         CHAR(10) NOT NULL,
    data_inregistrarii DATE NOT NULL,
    data_nasterii      DATE,
    gen                CHAR(30)
)
LOGGING;

ALTER TABLE membri
    ADD CHECK ( length(nume) > 1
                AND REGEXP_LIKE ( nume,
                                  '^[a-zA-Z ]*$' ) );

ALTER TABLE membri
    ADD CHECK ( length(prenume) > 1
                AND REGEXP_LIKE ( prenume,
                                  '^[a-zA-Z ]*$' ) );

ALTER TABLE membri
    ADD CONSTRAINT checknumbers CHECK ( length(nr_telefon) = 10
                                        AND REGEXP_LIKE ( nr_telefon,
                                                          '^[0][:7:3:2][0-9 ]*$' ) );

ALTER TABLE membri ADD CONSTRAINT membri_pk PRIMARY KEY ( id_membru );

ALTER TABLE membri ADD CONSTRAINT membri_nr_telefon_un UNIQUE ( nr_telefon );

ALTER TABLE autori
    ADD CONSTRAINT autori_carti_fk FOREIGN KEY ( carti_id_carte )
        REFERENCES carti ( id_carte )
    NOT DEFERRABLE;

ALTER TABLE carti
    ADD CONSTRAINT carti_categorii_fk FOREIGN KEY ( categorii_id_categorie )
        REFERENCES categorii ( id_categorie )
    NOT DEFERRABLE;

ALTER TABLE carduri_de_biblioteca
    ADD CONSTRAINT cdb_membri_fk FOREIGN KEY ( membri_id_membru )
        REFERENCES membri ( id_membru )
    NOT DEFERRABLE;

ALTER TABLE imprumuturi
    ADD CONSTRAINT imprumuturi_membri_fk FOREIGN KEY ( membri_id_membru )
        REFERENCES membri ( id_membru )
    NOT DEFERRABLE;

CREATE OR REPLACE TRIGGER Trg_carduri_de_biblioteca_BRIU 
    BEFORE INSERT OR UPDATE ON Carduri_de_biblioteca 
    FOR EACH ROW 
BEGIN
 IF( :new.Data_expirarii < SYSDATE)
  	THEN RAISE_APPLICATION_ERROR(-20001,
  		'Data invalida: ' || TO_CHAR ( :new.Data_expirarii, 'DD.MM.YYYY HH24:MI:SS') || 'trebuie sa fie mai mare decat data curenta');
  	
  	END IF;

END ;
/

CREATE OR REPLACE TRIGGER Trg_carti_BRIU 
    BEFORE INSERT OR UPDATE ON Carti 
    FOR EACH ROW 
BEGIN
 
 IF( :new.An_publicare > SYSDATE)
  	THEN RAISE_APPLICATION_ERROR(-20001,
  		'Data invalida: ' || TO_CHAR ( :new.An_publicare , 'DD.MM.YYYY HH24:MI:SS') || 'trebuie sa fie mai mica decat data curenta');
  	
  	END IF;
  	
 END ;
/

CREATE OR REPLACE TRIGGER Trg_imprumuturi_BRIU 
    BEFORE INSERT OR UPDATE ON Imprumuturi 
    FOR EACH ROW 
BEGIN

  IF( :new.Data_imprumutului > SYSDATE)
  	THEN RAISE_APPLICATION_ERROR(-20001,
  		'Data invalida: ' || TO_CHAR ( :new.Data_imprumutului, 'DD.MM.YYYY HH24:MI:SS') || 'trebuie sa fie mai mica decat data curenta');
  	
  	END IF;
  	
  IF( :new.Data_scadentei < SYSDATE)
  	THEN RAISE_APPLICATION_ERROR(-20001,
  		'Data invalida: ' || TO_CHAR ( :new.Data_scadentei, 'DD.MM.YYYY HH24:MI:SS') || 'trebuie sa fie mai mare decat data curenta');
  	
  	END IF;


  	
END ;
/

CREATE OR REPLACE TRIGGER Trg_Membri_BRIU 
    BEFORE INSERT OR UPDATE ON Membri 
    FOR EACH ROW 
BEGIN
  IF( :new.Data_Nasterii < date '1948-01-01' or 
      :new.Data_Nasterii > date '2005-01-01' )
  THEN
    RAISE_APPLICATION_ERROR( 
      -20001, 
      'Clientul trebuie sa aiba varsta minima de 18 ani si sa nu fie mai in varsta de 75 de ani' );
  
  END IF;

  IF( :new.Data_inregistrarii > SYSDATE)
  	THEN RAISE_APPLICATION_ERROR(-20001,
  		'Data invalida: ' || TO_CHAR ( :new.Data_inregistrarii, 'DD.MM.YYYY HH24:MI:SS') || 'trebuie sa fie mai mica decat data curenta');
  	
  	END IF;

END; 
/

CREATE SEQUENCE autori_id_autor_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER autori_id_autor_trg BEFORE
    INSERT ON autori
    FOR EACH ROW
    WHEN ( new.id_autor IS NULL )
BEGIN
    :new.id_autor := autori_id_autor_seq.nextval;
END;
/

CREATE SEQUENCE carduri_de_biblioteca_id_card START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER carduri_de_biblioteca_id_card BEFORE
    INSERT ON carduri_de_biblioteca
    FOR EACH ROW
    WHEN ( new.id_card IS NULL )
BEGIN
    :new.id_card := carduri_de_biblioteca_id_card.nextval;
END;
/

CREATE SEQUENCE carti_id_carte_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER carti_id_carte_trg BEFORE
    INSERT ON carti
    FOR EACH ROW
    WHEN ( new.id_carte IS NULL )
BEGIN
    :new.id_carte := carti_id_carte_seq.nextval;
END;
/

CREATE SEQUENCE categorii_id_categorie_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER categorii_id_categorie_trg BEFORE
    INSERT ON categorii
    FOR EACH ROW
    WHEN ( new.id_categorie IS NULL )
BEGIN
    :new.id_categorie := categorii_id_categorie_seq.nextval;
END;
/

CREATE SEQUENCE imprumuturi_id_imprumut_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER imprumuturi_id_imprumut_trg BEFORE
    INSERT ON imprumuturi
    FOR EACH ROW
    WHEN ( new.id_imprumut IS NULL )
BEGIN
    :new.id_imprumut := imprumuturi_id_imprumut_seq.nextval;
END;
/

CREATE SEQUENCE membri_id_membru_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER membri_id_membru_trg BEFORE
    INSERT ON membri
    FOR EACH ROW
    WHEN ( new.id_membru IS NULL )
BEGIN
    :new.id_membru := membri_id_membru_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             6
-- CREATE INDEX                             1
-- ALTER TABLE                             20
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                          10
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          6
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
